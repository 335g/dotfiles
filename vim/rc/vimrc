
if &compatible
  set nocompatible
endif

augroup MyAutoCmd
  autocmd!
  autocmd BufRead,BufNewFile *.swift set filetype=swift
augroup END

" load cursor position
augroup vimrcEx
  au BufRead * if line("'\"") > 0 && line("'\"") <= line("$") |
    \ exe "normal g`\"" | endif
augroup END


function! s:source_rc(path, ...) abort "{{{
  let use_global = get(a:000, 0, !has('vim_starting'))  
  let abspath = resolve(expand('~/.vim/rc/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif
endfunction"}}}

if has('vim_starting') 
  call s:source_rc('init.rc.vim')
endif

call s:source_rc('dein.rc.vim')

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')
  
  syntax enable
  filetype plugin indent on
endif

call s:source_rc('options.rc.vim')
call s:source_rc('mappings.rc.vim')
call s:source_rc('unix.rc.vim')
call s:source_rc('lang.rc.vim')

if has('nvim')
  call s:source_rc('neovim.rc.vim')
endif

set secure

" vim: foldmethod=marker
